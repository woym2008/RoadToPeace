//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity waitAddFloorCountEntity { get { return GetGroup(GameMatcher.WaitAddFloorCount).GetSingleEntity(); } }
    public WaitAddFloorCount waitAddFloorCount { get { return waitAddFloorCountEntity.waitAddFloorCount; } }
    public bool hasWaitAddFloorCount { get { return waitAddFloorCountEntity != null; } }

    public GameEntity SetWaitAddFloorCount(int newCount) {
        if (hasWaitAddFloorCount) {
            throw new Entitas.EntitasException("Could not set WaitAddFloorCount!\n" + this + " already has an entity with WaitAddFloorCount!",
                "You should check if the context already has a waitAddFloorCountEntity before setting it or use context.ReplaceWaitAddFloorCount().");
        }
        var entity = CreateEntity();
        entity.AddWaitAddFloorCount(newCount);
        return entity;
    }

    public void ReplaceWaitAddFloorCount(int newCount) {
        var entity = waitAddFloorCountEntity;
        if (entity == null) {
            entity = SetWaitAddFloorCount(newCount);
        } else {
            entity.ReplaceWaitAddFloorCount(newCount);
        }
    }

    public void RemoveWaitAddFloorCount() {
        waitAddFloorCountEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public WaitAddFloorCount waitAddFloorCount { get { return (WaitAddFloorCount)GetComponent(GameComponentsLookup.WaitAddFloorCount); } }
    public bool hasWaitAddFloorCount { get { return HasComponent(GameComponentsLookup.WaitAddFloorCount); } }

    public void AddWaitAddFloorCount(int newCount) {
        var index = GameComponentsLookup.WaitAddFloorCount;
        var component = (WaitAddFloorCount)CreateComponent(index, typeof(WaitAddFloorCount));
        component.count = newCount;
        AddComponent(index, component);
    }

    public void ReplaceWaitAddFloorCount(int newCount) {
        var index = GameComponentsLookup.WaitAddFloorCount;
        var component = (WaitAddFloorCount)CreateComponent(index, typeof(WaitAddFloorCount));
        component.count = newCount;
        ReplaceComponent(index, component);
    }

    public void RemoveWaitAddFloorCount() {
        RemoveComponent(GameComponentsLookup.WaitAddFloorCount);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherWaitAddFloorCount;

    public static Entitas.IMatcher<GameEntity> WaitAddFloorCount {
        get {
            if (_matcherWaitAddFloorCount == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.WaitAddFloorCount);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherWaitAddFloorCount = matcher;
            }

            return _matcherWaitAddFloorCount;
        }
    }
}
