//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity sFXEntity { get { return GetGroup(GameMatcher.SFX).GetSingleEntity(); } }
    public SFXComponent sFX { get { return sFXEntity.sFX; } }
    public bool hasSFX { get { return sFXEntity != null; } }

    public GameEntity SetSFX(UnityEngine.AudioSource newStorelazer, UnityEngine.AudioSource newFirelazer, UnityEngine.AudioSource newMissileboom) {
        if (hasSFX) {
            throw new Entitas.EntitasException("Could not set SFX!\n" + this + " already has an entity with SFXComponent!",
                "You should check if the context already has a sFXEntity before setting it or use context.ReplaceSFX().");
        }
        var entity = CreateEntity();
        entity.AddSFX(newStorelazer, newFirelazer, newMissileboom);
        return entity;
    }

    public void ReplaceSFX(UnityEngine.AudioSource newStorelazer, UnityEngine.AudioSource newFirelazer, UnityEngine.AudioSource newMissileboom) {
        var entity = sFXEntity;
        if (entity == null) {
            entity = SetSFX(newStorelazer, newFirelazer, newMissileboom);
        } else {
            entity.ReplaceSFX(newStorelazer, newFirelazer, newMissileboom);
        }
    }

    public void RemoveSFX() {
        sFXEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SFXComponent sFX { get { return (SFXComponent)GetComponent(GameComponentsLookup.SFX); } }
    public bool hasSFX { get { return HasComponent(GameComponentsLookup.SFX); } }

    public void AddSFX(UnityEngine.AudioSource newStorelazer, UnityEngine.AudioSource newFirelazer, UnityEngine.AudioSource newMissileboom) {
        var index = GameComponentsLookup.SFX;
        var component = (SFXComponent)CreateComponent(index, typeof(SFXComponent));
        component.storelazer = newStorelazer;
        component.firelazer = newFirelazer;
        component.missileboom = newMissileboom;
        AddComponent(index, component);
    }

    public void ReplaceSFX(UnityEngine.AudioSource newStorelazer, UnityEngine.AudioSource newFirelazer, UnityEngine.AudioSource newMissileboom) {
        var index = GameComponentsLookup.SFX;
        var component = (SFXComponent)CreateComponent(index, typeof(SFXComponent));
        component.storelazer = newStorelazer;
        component.firelazer = newFirelazer;
        component.missileboom = newMissileboom;
        ReplaceComponent(index, component);
    }

    public void RemoveSFX() {
        RemoveComponent(GameComponentsLookup.SFX);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSFX;

    public static Entitas.IMatcher<GameEntity> SFX {
        get {
            if (_matcherSFX == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SFX);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSFX = matcher;
            }

            return _matcherSFX;
        }
    }
}
