//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity gameCameraEntity { get { return GetGroup(GameMatcher.GameCamera).GetSingleEntity(); } }
    public GameCameraComponent gameCamera { get { return gameCameraEntity.gameCamera; } }
    public bool hasGameCamera { get { return gameCameraEntity != null; } }

    public GameEntity SetGameCamera(UnityEngine.Camera newCamera) {
        if (hasGameCamera) {
            throw new Entitas.EntitasException("Could not set GameCamera!\n" + this + " already has an entity with GameCameraComponent!",
                "You should check if the context already has a gameCameraEntity before setting it or use context.ReplaceGameCamera().");
        }
        var entity = CreateEntity();
        entity.AddGameCamera(newCamera);
        return entity;
    }

    public void ReplaceGameCamera(UnityEngine.Camera newCamera) {
        var entity = gameCameraEntity;
        if (entity == null) {
            entity = SetGameCamera(newCamera);
        } else {
            entity.ReplaceGameCamera(newCamera);
        }
    }

    public void RemoveGameCamera() {
        gameCameraEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GameCameraComponent gameCamera { get { return (GameCameraComponent)GetComponent(GameComponentsLookup.GameCamera); } }
    public bool hasGameCamera { get { return HasComponent(GameComponentsLookup.GameCamera); } }

    public void AddGameCamera(UnityEngine.Camera newCamera) {
        var index = GameComponentsLookup.GameCamera;
        var component = (GameCameraComponent)CreateComponent(index, typeof(GameCameraComponent));
        component.camera = newCamera;
        AddComponent(index, component);
    }

    public void ReplaceGameCamera(UnityEngine.Camera newCamera) {
        var index = GameComponentsLookup.GameCamera;
        var component = (GameCameraComponent)CreateComponent(index, typeof(GameCameraComponent));
        component.camera = newCamera;
        ReplaceComponent(index, component);
    }

    public void RemoveGameCamera() {
        RemoveComponent(GameComponentsLookup.GameCamera);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGameCamera;

    public static Entitas.IMatcher<GameEntity> GameCamera {
        get {
            if (_matcherGameCamera == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameCamera);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGameCamera = matcher;
            }

            return _matcherGameCamera;
        }
    }
}
