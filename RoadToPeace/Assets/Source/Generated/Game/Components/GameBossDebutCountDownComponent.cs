//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity bossDebutCountDownEntity { get { return GetGroup(GameMatcher.BossDebutCountDown).GetSingleEntity(); } }
    public BossDebutCountDownComponent bossDebutCountDown { get { return bossDebutCountDownEntity.bossDebutCountDown; } }
    public bool hasBossDebutCountDown { get { return bossDebutCountDownEntity != null; } }

    public GameEntity SetBossDebutCountDown(float newTime) {
        if (hasBossDebutCountDown) {
            throw new Entitas.EntitasException("Could not set BossDebutCountDown!\n" + this + " already has an entity with BossDebutCountDownComponent!",
                "You should check if the context already has a bossDebutCountDownEntity before setting it or use context.ReplaceBossDebutCountDown().");
        }
        var entity = CreateEntity();
        entity.AddBossDebutCountDown(newTime);
        return entity;
    }

    public void ReplaceBossDebutCountDown(float newTime) {
        var entity = bossDebutCountDownEntity;
        if (entity == null) {
            entity = SetBossDebutCountDown(newTime);
        } else {
            entity.ReplaceBossDebutCountDown(newTime);
        }
    }

    public void RemoveBossDebutCountDown() {
        bossDebutCountDownEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public BossDebutCountDownComponent bossDebutCountDown { get { return (BossDebutCountDownComponent)GetComponent(GameComponentsLookup.BossDebutCountDown); } }
    public bool hasBossDebutCountDown { get { return HasComponent(GameComponentsLookup.BossDebutCountDown); } }

    public void AddBossDebutCountDown(float newTime) {
        var index = GameComponentsLookup.BossDebutCountDown;
        var component = (BossDebutCountDownComponent)CreateComponent(index, typeof(BossDebutCountDownComponent));
        component.time = newTime;
        AddComponent(index, component);
    }

    public void ReplaceBossDebutCountDown(float newTime) {
        var index = GameComponentsLookup.BossDebutCountDown;
        var component = (BossDebutCountDownComponent)CreateComponent(index, typeof(BossDebutCountDownComponent));
        component.time = newTime;
        ReplaceComponent(index, component);
    }

    public void RemoveBossDebutCountDown() {
        RemoveComponent(GameComponentsLookup.BossDebutCountDown);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherBossDebutCountDown;

    public static Entitas.IMatcher<GameEntity> BossDebutCountDown {
        get {
            if (_matcherBossDebutCountDown == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.BossDebutCountDown);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherBossDebutCountDown = matcher;
            }

            return _matcherBossDebutCountDown;
        }
    }
}
