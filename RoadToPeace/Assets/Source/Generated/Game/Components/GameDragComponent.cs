//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public DragComponent drag { get { return (DragComponent)GetComponent(GameComponentsLookup.Drag); } }
    public bool hasDrag { get { return HasComponent(GameComponentsLookup.Drag); } }

    public void AddDrag(bool newIsdrag, int newDragID) {
        var index = GameComponentsLookup.Drag;
        var component = (DragComponent)CreateComponent(index, typeof(DragComponent));
        component.isdrag = newIsdrag;
        component.dragID = newDragID;
        AddComponent(index, component);
    }

    public void ReplaceDrag(bool newIsdrag, int newDragID) {
        var index = GameComponentsLookup.Drag;
        var component = (DragComponent)CreateComponent(index, typeof(DragComponent));
        component.isdrag = newIsdrag;
        component.dragID = newDragID;
        ReplaceComponent(index, component);
    }

    public void RemoveDrag() {
        RemoveComponent(GameComponentsLookup.Drag);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDrag;

    public static Entitas.IMatcher<GameEntity> Drag {
        get {
            if (_matcherDrag == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Drag);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDrag = matcher;
            }

            return _matcherDrag;
        }
    }
}
