//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity bossStateEntity { get { return GetGroup(GameMatcher.BossState).GetSingleEntity(); } }
    public BossStateComponent bossState { get { return bossStateEntity.bossState; } }
    public bool hasBossState { get { return bossStateEntity != null; } }

    public GameEntity SetBossState(BossState newState) {
        if (hasBossState) {
            throw new Entitas.EntitasException("Could not set BossState!\n" + this + " already has an entity with BossStateComponent!",
                "You should check if the context already has a bossStateEntity before setting it or use context.ReplaceBossState().");
        }
        var entity = CreateEntity();
        entity.AddBossState(newState);
        return entity;
    }

    public void ReplaceBossState(BossState newState) {
        var entity = bossStateEntity;
        if (entity == null) {
            entity = SetBossState(newState);
        } else {
            entity.ReplaceBossState(newState);
        }
    }

    public void RemoveBossState() {
        bossStateEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public BossStateComponent bossState { get { return (BossStateComponent)GetComponent(GameComponentsLookup.BossState); } }
    public bool hasBossState { get { return HasComponent(GameComponentsLookup.BossState); } }

    public void AddBossState(BossState newState) {
        var index = GameComponentsLookup.BossState;
        var component = (BossStateComponent)CreateComponent(index, typeof(BossStateComponent));
        component.state = newState;
        AddComponent(index, component);
    }

    public void ReplaceBossState(BossState newState) {
        var index = GameComponentsLookup.BossState;
        var component = (BossStateComponent)CreateComponent(index, typeof(BossStateComponent));
        component.state = newState;
        ReplaceComponent(index, component);
    }

    public void RemoveBossState() {
        RemoveComponent(GameComponentsLookup.BossState);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherBossState;

    public static Entitas.IMatcher<GameEntity> BossState {
        get {
            if (_matcherBossState == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.BossState);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherBossState = matcher;
            }

            return _matcherBossState;
        }
    }
}
