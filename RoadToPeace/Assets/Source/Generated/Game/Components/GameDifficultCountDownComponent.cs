//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity difficultCountDownEntity { get { return GetGroup(GameMatcher.DifficultCountDown).GetSingleEntity(); } }
    public DifficultCountDownComponent difficultCountDown { get { return difficultCountDownEntity.difficultCountDown; } }
    public bool hasDifficultCountDown { get { return difficultCountDownEntity != null; } }

    public GameEntity SetDifficultCountDown(float newCountdown) {
        if (hasDifficultCountDown) {
            throw new Entitas.EntitasException("Could not set DifficultCountDown!\n" + this + " already has an entity with DifficultCountDownComponent!",
                "You should check if the context already has a difficultCountDownEntity before setting it or use context.ReplaceDifficultCountDown().");
        }
        var entity = CreateEntity();
        entity.AddDifficultCountDown(newCountdown);
        return entity;
    }

    public void ReplaceDifficultCountDown(float newCountdown) {
        var entity = difficultCountDownEntity;
        if (entity == null) {
            entity = SetDifficultCountDown(newCountdown);
        } else {
            entity.ReplaceDifficultCountDown(newCountdown);
        }
    }

    public void RemoveDifficultCountDown() {
        difficultCountDownEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public DifficultCountDownComponent difficultCountDown { get { return (DifficultCountDownComponent)GetComponent(GameComponentsLookup.DifficultCountDown); } }
    public bool hasDifficultCountDown { get { return HasComponent(GameComponentsLookup.DifficultCountDown); } }

    public void AddDifficultCountDown(float newCountdown) {
        var index = GameComponentsLookup.DifficultCountDown;
        var component = (DifficultCountDownComponent)CreateComponent(index, typeof(DifficultCountDownComponent));
        component.countdown = newCountdown;
        AddComponent(index, component);
    }

    public void ReplaceDifficultCountDown(float newCountdown) {
        var index = GameComponentsLookup.DifficultCountDown;
        var component = (DifficultCountDownComponent)CreateComponent(index, typeof(DifficultCountDownComponent));
        component.countdown = newCountdown;
        ReplaceComponent(index, component);
    }

    public void RemoveDifficultCountDown() {
        RemoveComponent(GameComponentsLookup.DifficultCountDown);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDifficultCountDown;

    public static Entitas.IMatcher<GameEntity> DifficultCountDown {
        get {
            if (_matcherDifficultCountDown == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.DifficultCountDown);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDifficultCountDown = matcher;
            }

            return _matcherDifficultCountDown;
        }
    }
}
