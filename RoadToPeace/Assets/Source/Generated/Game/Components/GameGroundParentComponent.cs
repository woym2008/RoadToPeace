//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GroundParentComponent groundParent { get { return (GroundParentComponent)GetComponent(GameComponentsLookup.GroundParent); } }
    public bool hasGroundParent { get { return HasComponent(GameComponentsLookup.GroundParent); } }

    public void AddGroundParent(GameEntity newParent) {
        var index = GameComponentsLookup.GroundParent;
        var component = (GroundParentComponent)CreateComponent(index, typeof(GroundParentComponent));
        component.parent = newParent;
        AddComponent(index, component);
    }

    public void ReplaceGroundParent(GameEntity newParent) {
        var index = GameComponentsLookup.GroundParent;
        var component = (GroundParentComponent)CreateComponent(index, typeof(GroundParentComponent));
        component.parent = newParent;
        ReplaceComponent(index, component);
    }

    public void RemoveGroundParent() {
        RemoveComponent(GameComponentsLookup.GroundParent);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGroundParent;

    public static Entitas.IMatcher<GameEntity> GroundParent {
        get {
            if (_matcherGroundParent == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GroundParent);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGroundParent = matcher;
            }

            return _matcherGroundParent;
        }
    }
}
