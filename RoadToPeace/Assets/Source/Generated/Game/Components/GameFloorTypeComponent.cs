//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public FloorTypeComponent floorType { get { return (FloorTypeComponent)GetComponent(GameComponentsLookup.FloorType); } }
    public bool hasFloorType { get { return HasComponent(GameComponentsLookup.FloorType); } }

    public void AddFloorType(string newType) {
        var index = GameComponentsLookup.FloorType;
        var component = (FloorTypeComponent)CreateComponent(index, typeof(FloorTypeComponent));
        component.type = newType;
        AddComponent(index, component);
    }

    public void ReplaceFloorType(string newType) {
        var index = GameComponentsLookup.FloorType;
        var component = (FloorTypeComponent)CreateComponent(index, typeof(FloorTypeComponent));
        component.type = newType;
        ReplaceComponent(index, component);
    }

    public void RemoveFloorType() {
        RemoveComponent(GameComponentsLookup.FloorType);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherFloorType;

    public static Entitas.IMatcher<GameEntity> FloorType {
        get {
            if (_matcherFloorType == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.FloorType);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherFloorType = matcher;
            }

            return _matcherFloorType;
        }
    }
}
