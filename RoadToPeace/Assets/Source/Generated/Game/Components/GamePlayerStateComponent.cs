//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PlayerStateComponent playerState { get { return (PlayerStateComponent)GetComponent(GameComponentsLookup.PlayerState); } }
    public bool hasPlayerState { get { return HasComponent(GameComponentsLookup.PlayerState); } }

    public void AddPlayerState(PlayerGameState newState) {
        var index = GameComponentsLookup.PlayerState;
        var component = (PlayerStateComponent)CreateComponent(index, typeof(PlayerStateComponent));
        component.state = newState;
        AddComponent(index, component);
    }

    public void ReplacePlayerState(PlayerGameState newState) {
        var index = GameComponentsLookup.PlayerState;
        var component = (PlayerStateComponent)CreateComponent(index, typeof(PlayerStateComponent));
        component.state = newState;
        ReplaceComponent(index, component);
    }

    public void RemovePlayerState() {
        RemoveComponent(GameComponentsLookup.PlayerState);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPlayerState;

    public static Entitas.IMatcher<GameEntity> PlayerState {
        get {
            if (_matcherPlayerState == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PlayerState);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPlayerState = matcher;
            }

            return _matcherPlayerState;
        }
    }
}
