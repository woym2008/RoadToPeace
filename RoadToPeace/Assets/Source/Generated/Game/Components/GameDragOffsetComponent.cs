//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public DragOffsetComponent dragOffset { get { return (DragOffsetComponent)GetComponent(GameComponentsLookup.DragOffset); } }
    public bool hasDragOffset { get { return HasComponent(GameComponentsLookup.DragOffset); } }

    public void AddDragOffset(UnityEngine.Vector3 newOffset) {
        var index = GameComponentsLookup.DragOffset;
        var component = (DragOffsetComponent)CreateComponent(index, typeof(DragOffsetComponent));
        component.offset = newOffset;
        AddComponent(index, component);
    }

    public void ReplaceDragOffset(UnityEngine.Vector3 newOffset) {
        var index = GameComponentsLookup.DragOffset;
        var component = (DragOffsetComponent)CreateComponent(index, typeof(DragOffsetComponent));
        component.offset = newOffset;
        ReplaceComponent(index, component);
    }

    public void RemoveDragOffset() {
        RemoveComponent(GameComponentsLookup.DragOffset);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDragOffset;

    public static Entitas.IMatcher<GameEntity> DragOffset {
        get {
            if (_matcherDragOffset == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.DragOffset);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDragOffset = matcher;
            }

            return _matcherDragOffset;
        }
    }
}
