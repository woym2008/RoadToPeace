//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity floorSpeedEntity { get { return GetGroup(GameMatcher.FloorSpeed).GetSingleEntity(); } }
    public FloorSpeedComponent floorSpeed { get { return floorSpeedEntity.floorSpeed; } }
    public bool hasFloorSpeed { get { return floorSpeedEntity != null; } }

    public GameEntity SetFloorSpeed(float newValue, float newTargetvalue) {
        if (hasFloorSpeed) {
            throw new Entitas.EntitasException("Could not set FloorSpeed!\n" + this + " already has an entity with FloorSpeedComponent!",
                "You should check if the context already has a floorSpeedEntity before setting it or use context.ReplaceFloorSpeed().");
        }
        var entity = CreateEntity();
        entity.AddFloorSpeed(newValue, newTargetvalue);
        return entity;
    }

    public void ReplaceFloorSpeed(float newValue, float newTargetvalue) {
        var entity = floorSpeedEntity;
        if (entity == null) {
            entity = SetFloorSpeed(newValue, newTargetvalue);
        } else {
            entity.ReplaceFloorSpeed(newValue, newTargetvalue);
        }
    }

    public void RemoveFloorSpeed() {
        floorSpeedEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public FloorSpeedComponent floorSpeed { get { return (FloorSpeedComponent)GetComponent(GameComponentsLookup.FloorSpeed); } }
    public bool hasFloorSpeed { get { return HasComponent(GameComponentsLookup.FloorSpeed); } }

    public void AddFloorSpeed(float newValue, float newTargetvalue) {
        var index = GameComponentsLookup.FloorSpeed;
        var component = (FloorSpeedComponent)CreateComponent(index, typeof(FloorSpeedComponent));
        component.value = newValue;
        component.targetvalue = newTargetvalue;
        AddComponent(index, component);
    }

    public void ReplaceFloorSpeed(float newValue, float newTargetvalue) {
        var index = GameComponentsLookup.FloorSpeed;
        var component = (FloorSpeedComponent)CreateComponent(index, typeof(FloorSpeedComponent));
        component.value = newValue;
        component.targetvalue = newTargetvalue;
        ReplaceComponent(index, component);
    }

    public void RemoveFloorSpeed() {
        RemoveComponent(GameComponentsLookup.FloorSpeed);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherFloorSpeed;

    public static Entitas.IMatcher<GameEntity> FloorSpeed {
        get {
            if (_matcherFloorSpeed == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.FloorSpeed);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherFloorSpeed = matcher;
            }

            return _matcherFloorSpeed;
        }
    }
}
