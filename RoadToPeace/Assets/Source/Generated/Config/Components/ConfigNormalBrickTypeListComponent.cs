//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigContext {

    public ConfigEntity normalBrickTypeListEntity { get { return GetGroup(ConfigMatcher.NormalBrickTypeList).GetSingleEntity(); } }
    public NormalBrickTypeListComponent normalBrickTypeList { get { return normalBrickTypeListEntity.normalBrickTypeList; } }
    public bool hasNormalBrickTypeList { get { return normalBrickTypeListEntity != null; } }

    public ConfigEntity SetNormalBrickTypeList(System.Collections.Generic.List<string> newTypeList) {
        if (hasNormalBrickTypeList) {
            throw new Entitas.EntitasException("Could not set NormalBrickTypeList!\n" + this + " already has an entity with NormalBrickTypeListComponent!",
                "You should check if the context already has a normalBrickTypeListEntity before setting it or use context.ReplaceNormalBrickTypeList().");
        }
        var entity = CreateEntity();
        entity.AddNormalBrickTypeList(newTypeList);
        return entity;
    }

    public void ReplaceNormalBrickTypeList(System.Collections.Generic.List<string> newTypeList) {
        var entity = normalBrickTypeListEntity;
        if (entity == null) {
            entity = SetNormalBrickTypeList(newTypeList);
        } else {
            entity.ReplaceNormalBrickTypeList(newTypeList);
        }
    }

    public void RemoveNormalBrickTypeList() {
        normalBrickTypeListEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public NormalBrickTypeListComponent normalBrickTypeList { get { return (NormalBrickTypeListComponent)GetComponent(ConfigComponentsLookup.NormalBrickTypeList); } }
    public bool hasNormalBrickTypeList { get { return HasComponent(ConfigComponentsLookup.NormalBrickTypeList); } }

    public void AddNormalBrickTypeList(System.Collections.Generic.List<string> newTypeList) {
        var index = ConfigComponentsLookup.NormalBrickTypeList;
        var component = (NormalBrickTypeListComponent)CreateComponent(index, typeof(NormalBrickTypeListComponent));
        component.typeList = newTypeList;
        AddComponent(index, component);
    }

    public void ReplaceNormalBrickTypeList(System.Collections.Generic.List<string> newTypeList) {
        var index = ConfigComponentsLookup.NormalBrickTypeList;
        var component = (NormalBrickTypeListComponent)CreateComponent(index, typeof(NormalBrickTypeListComponent));
        component.typeList = newTypeList;
        ReplaceComponent(index, component);
    }

    public void RemoveNormalBrickTypeList() {
        RemoveComponent(ConfigComponentsLookup.NormalBrickTypeList);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher {

    static Entitas.IMatcher<ConfigEntity> _matcherNormalBrickTypeList;

    public static Entitas.IMatcher<ConfigEntity> NormalBrickTypeList {
        get {
            if (_matcherNormalBrickTypeList == null) {
                var matcher = (Entitas.Matcher<ConfigEntity>)Entitas.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.NormalBrickTypeList);
                matcher.componentNames = ConfigComponentsLookup.componentNames;
                _matcherNormalBrickTypeList = matcher;
            }

            return _matcherNormalBrickTypeList;
        }
    }
}
