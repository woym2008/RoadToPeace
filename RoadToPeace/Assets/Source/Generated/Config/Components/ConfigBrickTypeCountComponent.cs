//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigContext {

    public ConfigEntity brickTypeCountEntity { get { return GetGroup(ConfigMatcher.BrickTypeCount).GetSingleEntity(); } }
    public BrickTypeCountComponent brickTypeCount { get { return brickTypeCountEntity.brickTypeCount; } }
    public bool hasBrickTypeCount { get { return brickTypeCountEntity != null; } }

    public ConfigEntity SetBrickTypeCount(int newValue) {
        if (hasBrickTypeCount) {
            throw new Entitas.EntitasException("Could not set BrickTypeCount!\n" + this + " already has an entity with BrickTypeCountComponent!",
                "You should check if the context already has a brickTypeCountEntity before setting it or use context.ReplaceBrickTypeCount().");
        }
        var entity = CreateEntity();
        entity.AddBrickTypeCount(newValue);
        return entity;
    }

    public void ReplaceBrickTypeCount(int newValue) {
        var entity = brickTypeCountEntity;
        if (entity == null) {
            entity = SetBrickTypeCount(newValue);
        } else {
            entity.ReplaceBrickTypeCount(newValue);
        }
    }

    public void RemoveBrickTypeCount() {
        brickTypeCountEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public BrickTypeCountComponent brickTypeCount { get { return (BrickTypeCountComponent)GetComponent(ConfigComponentsLookup.BrickTypeCount); } }
    public bool hasBrickTypeCount { get { return HasComponent(ConfigComponentsLookup.BrickTypeCount); } }

    public void AddBrickTypeCount(int newValue) {
        var index = ConfigComponentsLookup.BrickTypeCount;
        var component = (BrickTypeCountComponent)CreateComponent(index, typeof(BrickTypeCountComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceBrickTypeCount(int newValue) {
        var index = ConfigComponentsLookup.BrickTypeCount;
        var component = (BrickTypeCountComponent)CreateComponent(index, typeof(BrickTypeCountComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveBrickTypeCount() {
        RemoveComponent(ConfigComponentsLookup.BrickTypeCount);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher {

    static Entitas.IMatcher<ConfigEntity> _matcherBrickTypeCount;

    public static Entitas.IMatcher<ConfigEntity> BrickTypeCount {
        get {
            if (_matcherBrickTypeCount == null) {
                var matcher = (Entitas.Matcher<ConfigEntity>)Entitas.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.BrickTypeCount);
                matcher.componentNames = ConfigComponentsLookup.componentNames;
                _matcherBrickTypeCount = matcher;
            }

            return _matcherBrickTypeCount;
        }
    }
}
