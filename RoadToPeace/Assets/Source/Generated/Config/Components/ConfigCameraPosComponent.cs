//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigContext {

    public ConfigEntity cameraPosEntity { get { return GetGroup(ConfigMatcher.CameraPos).GetSingleEntity(); } }
    public CameraPosComponent cameraPos { get { return cameraPosEntity.cameraPos; } }
    public bool hasCameraPos { get { return cameraPosEntity != null; } }

    public ConfigEntity SetCameraPos(UnityEngine.Vector3 newRunningpos, UnityEngine.Vector3 newTitlepos) {
        if (hasCameraPos) {
            throw new Entitas.EntitasException("Could not set CameraPos!\n" + this + " already has an entity with CameraPosComponent!",
                "You should check if the context already has a cameraPosEntity before setting it or use context.ReplaceCameraPos().");
        }
        var entity = CreateEntity();
        entity.AddCameraPos(newRunningpos, newTitlepos);
        return entity;
    }

    public void ReplaceCameraPos(UnityEngine.Vector3 newRunningpos, UnityEngine.Vector3 newTitlepos) {
        var entity = cameraPosEntity;
        if (entity == null) {
            entity = SetCameraPos(newRunningpos, newTitlepos);
        } else {
            entity.ReplaceCameraPos(newRunningpos, newTitlepos);
        }
    }

    public void RemoveCameraPos() {
        cameraPosEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public CameraPosComponent cameraPos { get { return (CameraPosComponent)GetComponent(ConfigComponentsLookup.CameraPos); } }
    public bool hasCameraPos { get { return HasComponent(ConfigComponentsLookup.CameraPos); } }

    public void AddCameraPos(UnityEngine.Vector3 newRunningpos, UnityEngine.Vector3 newTitlepos) {
        var index = ConfigComponentsLookup.CameraPos;
        var component = (CameraPosComponent)CreateComponent(index, typeof(CameraPosComponent));
        component.runningpos = newRunningpos;
        component.titlepos = newTitlepos;
        AddComponent(index, component);
    }

    public void ReplaceCameraPos(UnityEngine.Vector3 newRunningpos, UnityEngine.Vector3 newTitlepos) {
        var index = ConfigComponentsLookup.CameraPos;
        var component = (CameraPosComponent)CreateComponent(index, typeof(CameraPosComponent));
        component.runningpos = newRunningpos;
        component.titlepos = newTitlepos;
        ReplaceComponent(index, component);
    }

    public void RemoveCameraPos() {
        RemoveComponent(ConfigComponentsLookup.CameraPos);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher {

    static Entitas.IMatcher<ConfigEntity> _matcherCameraPos;

    public static Entitas.IMatcher<ConfigEntity> CameraPos {
        get {
            if (_matcherCameraPos == null) {
                var matcher = (Entitas.Matcher<ConfigEntity>)Entitas.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.CameraPos);
                matcher.componentNames = ConfigComponentsLookup.componentNames;
                _matcherCameraPos = matcher;
            }

            return _matcherCameraPos;
        }
    }
}
