//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigContext {

    public ConfigEntity brickResBaseEntity { get { return GetGroup(ConfigMatcher.BrickResBase).GetSingleEntity(); } }
    public BrickResBaseComponent brickResBase { get { return brickResBaseEntity.brickResBase; } }
    public bool hasBrickResBase { get { return brickResBaseEntity != null; } }

    public ConfigEntity SetBrickResBase(string newBasestr) {
        if (hasBrickResBase) {
            throw new Entitas.EntitasException("Could not set BrickResBase!\n" + this + " already has an entity with BrickResBaseComponent!",
                "You should check if the context already has a brickResBaseEntity before setting it or use context.ReplaceBrickResBase().");
        }
        var entity = CreateEntity();
        entity.AddBrickResBase(newBasestr);
        return entity;
    }

    public void ReplaceBrickResBase(string newBasestr) {
        var entity = brickResBaseEntity;
        if (entity == null) {
            entity = SetBrickResBase(newBasestr);
        } else {
            entity.ReplaceBrickResBase(newBasestr);
        }
    }

    public void RemoveBrickResBase() {
        brickResBaseEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public BrickResBaseComponent brickResBase { get { return (BrickResBaseComponent)GetComponent(ConfigComponentsLookup.BrickResBase); } }
    public bool hasBrickResBase { get { return HasComponent(ConfigComponentsLookup.BrickResBase); } }

    public void AddBrickResBase(string newBasestr) {
        var index = ConfigComponentsLookup.BrickResBase;
        var component = (BrickResBaseComponent)CreateComponent(index, typeof(BrickResBaseComponent));
        component.basestr = newBasestr;
        AddComponent(index, component);
    }

    public void ReplaceBrickResBase(string newBasestr) {
        var index = ConfigComponentsLookup.BrickResBase;
        var component = (BrickResBaseComponent)CreateComponent(index, typeof(BrickResBaseComponent));
        component.basestr = newBasestr;
        ReplaceComponent(index, component);
    }

    public void RemoveBrickResBase() {
        RemoveComponent(ConfigComponentsLookup.BrickResBase);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher {

    static Entitas.IMatcher<ConfigEntity> _matcherBrickResBase;

    public static Entitas.IMatcher<ConfigEntity> BrickResBase {
        get {
            if (_matcherBrickResBase == null) {
                var matcher = (Entitas.Matcher<ConfigEntity>)Entitas.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.BrickResBase);
                matcher.componentNames = ConfigComponentsLookup.componentNames;
                _matcherBrickResBase = matcher;
            }

            return _matcherBrickResBase;
        }
    }
}
