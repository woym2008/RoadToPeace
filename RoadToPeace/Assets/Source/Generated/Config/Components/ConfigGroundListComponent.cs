//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigContext {

    public ConfigEntity groundListEntity { get { return GetGroup(ConfigMatcher.GroundList).GetSingleEntity(); } }
    public GroundListComponent groundList { get { return groundListEntity.groundList; } }
    public bool hasGroundList { get { return groundListEntity != null; } }

    public ConfigEntity SetGroundList(System.Collections.Generic.List<string> newGroundList) {
        if (hasGroundList) {
            throw new Entitas.EntitasException("Could not set GroundList!\n" + this + " already has an entity with GroundListComponent!",
                "You should check if the context already has a groundListEntity before setting it or use context.ReplaceGroundList().");
        }
        var entity = CreateEntity();
        entity.AddGroundList(newGroundList);
        return entity;
    }

    public void ReplaceGroundList(System.Collections.Generic.List<string> newGroundList) {
        var entity = groundListEntity;
        if (entity == null) {
            entity = SetGroundList(newGroundList);
        } else {
            entity.ReplaceGroundList(newGroundList);
        }
    }

    public void RemoveGroundList() {
        groundListEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public GroundListComponent groundList { get { return (GroundListComponent)GetComponent(ConfigComponentsLookup.GroundList); } }
    public bool hasGroundList { get { return HasComponent(ConfigComponentsLookup.GroundList); } }

    public void AddGroundList(System.Collections.Generic.List<string> newGroundList) {
        var index = ConfigComponentsLookup.GroundList;
        var component = (GroundListComponent)CreateComponent(index, typeof(GroundListComponent));
        component.groundList = newGroundList;
        AddComponent(index, component);
    }

    public void ReplaceGroundList(System.Collections.Generic.List<string> newGroundList) {
        var index = ConfigComponentsLookup.GroundList;
        var component = (GroundListComponent)CreateComponent(index, typeof(GroundListComponent));
        component.groundList = newGroundList;
        ReplaceComponent(index, component);
    }

    public void RemoveGroundList() {
        RemoveComponent(ConfigComponentsLookup.GroundList);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher {

    static Entitas.IMatcher<ConfigEntity> _matcherGroundList;

    public static Entitas.IMatcher<ConfigEntity> GroundList {
        get {
            if (_matcherGroundList == null) {
                var matcher = (Entitas.Matcher<ConfigEntity>)Entitas.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.GroundList);
                matcher.componentNames = ConfigComponentsLookup.componentNames;
                _matcherGroundList = matcher;
            }

            return _matcherGroundList;
        }
    }
}
