//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigContext {

    public ConfigEntity brickTableEntity { get { return GetGroup(ConfigMatcher.BrickTable).GetSingleEntity(); } }
    public BrickTableComponent brickTable { get { return brickTableEntity.brickTable; } }
    public bool hasBrickTable { get { return brickTableEntity != null; } }

    public ConfigEntity SetBrickTable(BrickTable newTable) {
        if (hasBrickTable) {
            throw new Entitas.EntitasException("Could not set BrickTable!\n" + this + " already has an entity with BrickTableComponent!",
                "You should check if the context already has a brickTableEntity before setting it or use context.ReplaceBrickTable().");
        }
        var entity = CreateEntity();
        entity.AddBrickTable(newTable);
        return entity;
    }

    public void ReplaceBrickTable(BrickTable newTable) {
        var entity = brickTableEntity;
        if (entity == null) {
            entity = SetBrickTable(newTable);
        } else {
            entity.ReplaceBrickTable(newTable);
        }
    }

    public void RemoveBrickTable() {
        brickTableEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public BrickTableComponent brickTable { get { return (BrickTableComponent)GetComponent(ConfigComponentsLookup.BrickTable); } }
    public bool hasBrickTable { get { return HasComponent(ConfigComponentsLookup.BrickTable); } }

    public void AddBrickTable(BrickTable newTable) {
        var index = ConfigComponentsLookup.BrickTable;
        var component = (BrickTableComponent)CreateComponent(index, typeof(BrickTableComponent));
        component.table = newTable;
        AddComponent(index, component);
    }

    public void ReplaceBrickTable(BrickTable newTable) {
        var index = ConfigComponentsLookup.BrickTable;
        var component = (BrickTableComponent)CreateComponent(index, typeof(BrickTableComponent));
        component.table = newTable;
        ReplaceComponent(index, component);
    }

    public void RemoveBrickTable() {
        RemoveComponent(ConfigComponentsLookup.BrickTable);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher {

    static Entitas.IMatcher<ConfigEntity> _matcherBrickTable;

    public static Entitas.IMatcher<ConfigEntity> BrickTable {
        get {
            if (_matcherBrickTable == null) {
                var matcher = (Entitas.Matcher<ConfigEntity>)Entitas.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.BrickTable);
                matcher.componentNames = ConfigComponentsLookup.componentNames;
                _matcherBrickTable = matcher;
            }

            return _matcherBrickTable;
        }
    }
}
