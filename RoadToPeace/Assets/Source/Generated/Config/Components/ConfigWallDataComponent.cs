//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigContext {

    public ConfigEntity wallDataEntity { get { return GetGroup(ConfigMatcher.WallData).GetSingleEntity(); } }
    public WallDataComponent wallData { get { return wallDataEntity.wallData; } }
    public bool hasWallData { get { return wallDataEntity != null; } }

    public ConfigEntity SetWallData(float newWallWidth) {
        if (hasWallData) {
            throw new Entitas.EntitasException("Could not set WallData!\n" + this + " already has an entity with WallDataComponent!",
                "You should check if the context already has a wallDataEntity before setting it or use context.ReplaceWallData().");
        }
        var entity = CreateEntity();
        entity.AddWallData(newWallWidth);
        return entity;
    }

    public void ReplaceWallData(float newWallWidth) {
        var entity = wallDataEntity;
        if (entity == null) {
            entity = SetWallData(newWallWidth);
        } else {
            entity.ReplaceWallData(newWallWidth);
        }
    }

    public void RemoveWallData() {
        wallDataEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public WallDataComponent wallData { get { return (WallDataComponent)GetComponent(ConfigComponentsLookup.WallData); } }
    public bool hasWallData { get { return HasComponent(ConfigComponentsLookup.WallData); } }

    public void AddWallData(float newWallWidth) {
        var index = ConfigComponentsLookup.WallData;
        var component = (WallDataComponent)CreateComponent(index, typeof(WallDataComponent));
        component.wallWidth = newWallWidth;
        AddComponent(index, component);
    }

    public void ReplaceWallData(float newWallWidth) {
        var index = ConfigComponentsLookup.WallData;
        var component = (WallDataComponent)CreateComponent(index, typeof(WallDataComponent));
        component.wallWidth = newWallWidth;
        ReplaceComponent(index, component);
    }

    public void RemoveWallData() {
        RemoveComponent(ConfigComponentsLookup.WallData);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher {

    static Entitas.IMatcher<ConfigEntity> _matcherWallData;

    public static Entitas.IMatcher<ConfigEntity> WallData {
        get {
            if (_matcherWallData == null) {
                var matcher = (Entitas.Matcher<ConfigEntity>)Entitas.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.WallData);
                matcher.componentNames = ConfigComponentsLookup.componentNames;
                _matcherWallData = matcher;
            }

            return _matcherWallData;
        }
    }
}
